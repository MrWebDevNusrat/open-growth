#!/usr/local/bin/node

// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Libs
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
const http    = require('request-promise');
const gulp    = require('gulp');
const apikeys = require('./keys.json');



// TODO - GET/MAKE BLOCK labled 'Open Growth'
// TODO - ...
// TODO - wait for BLOCK to boot
// TODO - test BLOCK
// TODO - show DEBUG output
// TODO - 
// TODO - print Signal cURLS and JS Functions for reporing a signal
// TODO - 

// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Main
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
var $scope = {
    key_id      : 226891
,   block_id    : 2071
,   signals_id  : 2010
,   delights_id : 2521
};

pubnub_login( apikeys.pubnub.email, apikeys.pubnub.password ).then( login => {

    console.log( 'Logged In!', login.result.user_id );
    $scope.login = login.result;

    // Build Signals Handler
    return build_signals();

} ).then( result => {

    console.log( 'Built Signals Handler!', result.length );
    $scope.signals_code = result;

    // Build Delights Handler
    return build_delights();

} ).then( result => {

    console.log( 'Built Delights Handler!', result.length );
    $scope.delights_code = result;

    // Upload Signals
    return upload_signals_handler();

} ).then( result => {

    console.log( 'Uploaded Signals Handler!', result );

    // Upload Delights
    return upload_delights_handler();

} ).then( result => {

    console.log( 'Uploaded Delights Handler!', result );

    // Sent Restart Signal
    return restart();

} ).then( result => {

    console.log( 'Restarting!', result );

    // Print Instructions
    return instructions();

} ).then( result => {

    // Done!

} );

// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Build Event Handler Code
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function build_signals() {
    var buffer = ''
    var keys   = 'opengrowth.keys = ' + JSON.stringify(apikeys) + ';'
    return new Promise( ( resolve, reject ) => {
        gulp.src([
            './handlers/signals.js'
        ,   './helpers/*.js'
        ,   './modules/*.js'
        //,   './delights/*.js'
        //,   './signals/*.js'
        ])
        .on( 'end',   data  => { resolve(buffer + keys) } )
        .on( 'error', error => { reject(error)          } )
        .on( 'data',  bytes => {
            buffer += bytes.contents.toString().trim();
        } );
    } );
}

// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Build Event Handler Code
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function build_delights() {
    var buffer = ''
    var keys   = 'opengrowth.keys = ' + JSON.stringify(apikeys) + ';'
    return new Promise( ( resolve, reject ) => {
        gulp.src([
            './handlers/delights.js'
        ,   './helpers/*.js'
        ,   './modules/*.js'
        ,   './delights/*.js'
        ,   './signals/*.js'
        ])
        .on( 'end',   data  => { resolve(buffer + keys) } )
        .on( 'error', error => { reject(error)          } )
        .on( 'data',  bytes => {
            buffer += bytes.contents.toString().trim();
        } );
    } );
}

// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Upload Signals Handler Code
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function upload_signals_handler() {
    return http({
        method  : 'PUT'
    ,   json    : true
    ,   uri     : 'https://admin.pubnub.com/api/v1' + 
                  `/blocks/key/${$scope.key_id}/`   +
                  `event_handler/${$scope.signals_id}`
    ,   headers : { 'X-Session-Token' : $scope.login.token }
    ,   body    : {
            key_id    : $scope.key_id
        ,   block_id  : $scope.block_id
        ,   id        : $scope.signals_id
        ,   code      : $scope.signals_code
        ,   channels  : 'opengrowth.signals'
        ,   event     : 'js-before-publish'
        ,   type      : 'js'
        ,   log_level : 'debug'
        ,   name      : 'Open Growth Signal Handler'
        ,   output    : 'opengrowth.signals-info'
        }
    }).catch( error => {
        console.error( 'error', error );
    } );
}

// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Upload Delights Handler Code
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function upload_delights_handler() {
    return http({
        method  : 'PUT'
    ,   json    : true
    ,   uri     : 'https://admin.pubnub.com/api/v1' + 
                  `/blocks/key/${$scope.key_id}/`   +
                  `event_handler/${$scope.delights_id}`
    ,   headers : { 'X-Session-Token' : $scope.login.token }
    ,   body    : {
            key_id    : $scope.key_id
        ,   block_id  : $scope.block_id
        ,   id        : $scope.delights_id
        ,   code      : $scope.delights_code
        ,   channels  : 'opengrowth.signals'
        ,   event     : 'js-after-publish'
        ,   type      : 'js'
        ,   log_level : 'debug'
        ,   name      : 'Open Growth Delights Handler'
        ,   output    : 'opengrowth.delights-info'
        }
    }).catch( error => {
        console.error( 'error', error );
    } );
}

// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Print cURL Example
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function instructions() {
    const pub = apikeys.pubnub.publish;
    const sub = apikeys.pubnub.subscribe;
    const chn = 'opengrowth.signals';
    const msg = `\\{"signal":"signup","email":"stephen@pubnub.com"\\}`;

    // Done Printing Instructions
    console.log(`
        ## Try it out!
        curl 'https://ps.pubnub.com/subscribe/${sub}/${chn}/0/-1' &
        curl 'https://ps.pubnub.com/publish/${pub}/${sub}/0/${chn}/0/${msg}'
    `);
}

// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Restart Event Handler
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function restart() {
    return http({
        method  : 'POST'
    ,   uri     : 'https://admin.pubnub.com/api/v1' + 
                  `/blocks/key/${$scope.key_id}/`   +
                  `block/${$scope.block_id}/start`
    ,   body    : {
            block_id : $scope.block_id
        ,   key_id   : $scope.key_id
        ,   action   : 'start' 
    }
    ,   headers : { 'X-Session-Token' : $scope.login.token }
    ,   json    : true
    }).catch( error => {
        console.error( 'error', error );
    } );
}

// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
// Login to PubNub
// =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
function pubnub_login( email, password ) {
    return http({
        method : 'POST'
    ,   uri    : 'https://admin.pubnub.com/api/me'
    ,   body   : { 'email' : email, 'password' : password }
    ,   json   : true
    }).catch( error => {
        console.error( 'error', error );
    } );
}
